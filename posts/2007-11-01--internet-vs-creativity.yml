---
author: Stephen Lewis <stephen@experiencehq.net>
date: 2007-11-01
title: The Internet vs. Creativity
---
# The Internet vs. Creativity #
The internet kills creativity. We've all got pressing deadlines and limited resources, and the internet is just sitting there, promising a quick solution to our problem, in exchange for a few minutes Googling.

In the case of a coding quandary, that solution is usually a snippet of code, or maybe a piece of third-party software. Free (or cheap), easy, already tested; the simplest, quickest, most cost-effective way to overcome the current roadblock.

Sometimes, though, a better solution can be found by making life difficult for yourself. Disconnecting from the outside world, and making do with what you already know, and already have. Finding a creative solution to a technical problem, if you will.

## Cunning and guile
This is why I love [this <abbr title="Completely Automated Public Turing Test to Tell Computers and Humans Apart">CAPTCHA</abbr> idea](http://blog.trendmicro.com/captcha-wish-your-girlfriend-was-hot-like-me/ "CAPTCHA wish your girlfriend was hot like me...") (potentially <abbr title="Not Safe For Work">NSFW</abbr>), regardless of its nefarious underpinnings. Unlike his peers, the creator of this delicious piece of lateral thinking didn't assume that the answer to a technical problem (how to automatically decipher [CAPTCHAs](http://www.captcha.net/ "The official guide to the Completely Automated Public Turing Test to Tell Computers and Humans Apart")) was a more technically advanced solution (better [<abbr title="Optical Character Recognition">OCR</abbr>](http://en.wikipedia.org/wiki/Optical_character_recognition "The Wikipedia guide to Optical Character Recognition")).

He preferred to make creative use of his existing resources.

## In-here, not out-there
As I acknowledged at the start of this post, we're all subject to certain pressures, and frequently we've just got to get the job done as quickly as possible, without reinventing the wheel (as proponents of the "Google for a pre-existing solution" approach would say).

Just remember though, the next time you're facing a problem, the best solution may be in-here, not out-there.
